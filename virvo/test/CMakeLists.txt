

SET(VVIEW_INC
  vvobjview.h
  vvperformancetest.h
  vvview.h
)

SET(VVIEW_SRC
  vvobjview.cpp
  vvperformancetest.cpp
  vvview.cpp
)

IF(COVISE_BUILD)
  #SET(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} "$ENV{EXTERNLIBS}/glut")
  #FIND_PACKAGE(GLUT)
  USE_GLUT()
  USE_GLEW()

  IF(WIN32)
    FIND_PATH(PTHREADW32_INCLUDE_DIR pthread.h PATHS "$ENV{EXTERNLIBS}/pthreads/include")
    FIND_LIBRARY(PTHREADW32_LIBRARY pthreadVC2.lib PATHS "$ENV{EXTERNLIBS}/pthreads/lib")
    SET(EXTRA_LIBS ${EXTRA_LIBS} ${PTHREADW32_LIBRARY} ws2_32.lib)
  ENDIF(WIN32)

  IF(CUDA_FOUND)
    ADD_DEFINITIONS(-DNV_PROPRIETARY_CODE)
    INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
  ENDIF(CUDA_FOUND)

  INCLUDE_DIRECTORIES(
    ${PTHREADW32_INCLUDE_DIR}
  )
  ADD_COVISE_EXECUTABLE(vview ${VVIEW_SRC} ${VVIEW_INC})
  TARGET_LINK_LIBRARIES(vview coVirvo ${EXTRA_LIBS}) # ${CMAKE_THREAD_LIBS_INIT} 

  COVISE_INSTALL_TARGET(vview)
ELSE(COVISE_BUILD)
  INCLUDE_DIRECTORIES(..)
  ADD_EXECUTABLE(vview ${VVIEW_INC} ${VVIEW_SRC})

  FIND_PACKAGE(GLUT REQUIRED)

  IF(GLUT_FOUND)
    INCLUDE_DIRECTORIES(${GLUT_INCLUDE_DIR})
    TARGET_LINK_LIBRARIES(vview ${GLUT_glut_LIBRARY})
  ENDIF(GLUT_FOUND)
 
  TARGET_LINK_LIBRARIES(vview virvo)
ENDIF(COVISE_BUILD)

